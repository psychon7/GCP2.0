# NATS JetStream Configuration for GCP Project
# This configuration is optimized for messaging and moderate workload

# Server settings
server_name: gcp_nats
host: 0.0.0.0
port: 4222
http_port: 8222

# Debug and trace
debug: false
trace: false
logtime: true

# Logging (stdout/stderr is default and preferred for Docker)

# Maximum payload
max_payload: 8MB

# Maximum connections
max_connections: 1000

# Maximum control line
max_control_line: 4KB

# Maximum pending size
max_pending: 32MB

# Write deadline
write_deadline: "2s"

# TLS configuration (commented out for now)
# tls {
#   cert_file: "/etc/nats/certs/server-cert.pem"
#   key_file: "/etc/nats/certs/server-key.pem"
#   ca_file: "/etc/nats/certs/ca.pem"
#   verify: true
# }

# Client authentication is handled by the 'accounts' block below.

# Cluster configuration (for future use)
# cluster {
#   name: "gcp_cluster"
#   listen: "0.0.0.0:6222"
#   routes = [
#     "nats-route://nats1:6222",
#     "nats-route://nats2:6222",
#     "nats-route://nats3:6222"
#   ]
#   tls {
#     cert_file: "/etc/nats/certs/cluster-cert.pem"
#     key_file: "/etc/nats/certs/cluster-key.pem"
#     ca_file: "/etc/nats/certs/ca.pem"
#     verify: true
#   }
# }

# JetStream configuration
jetstream {
  store_dir: "/data"
  max_memory_store: 1GB
  max_file_store: 10GB
}

# Monitoring
http: 0.0.0.0:8222

# System accounts
system_account: SYS

# Accounts
accounts {
  SYS: {
    users: [
      {user: sys, password: syspassword}
    ]
  }
  GCP: {
    jetstream: enabled
    users: [
      {user: gcp_user, password: gcp_password}
    ]
    exports: [
      {stream: entropy.>}
      {stream: metrics.>}
      {stream: events.>}
    ]
  }
}
